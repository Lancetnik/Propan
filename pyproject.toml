[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "propan"
description = "Propan framework: the simplest way to work with a messaging queues"
readme = "README.md"
authors = [
    { name = "Pastukhov Nikita", email = "diementros@yandex.ru" },
]
license = "MIT"

homepage = "https://github.com/Lancetnik/Propan"
keywords = ["rabbitmq", "framework", "message brokers"]

requires-python = ">=3.7"

classifiers = [
    "Development Status :: 4 - Beta",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Operating System :: OS Independent",
    "Topic :: Internet",
    "Topic :: Software Development :: Libraries :: Application Frameworks",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development",
    "Typing :: Typed",
    "Intended Audience :: Developers",
    "Intended Audience :: Information Technology",
    "Intended Audience :: System Administrators",
    "Environment :: Web Environment",
    "Framework :: AsyncIO",
    "Framework :: Pydantic",
    "Framework :: Pydantic :: 1",
]

dependencies = [
    "pydantic>=1.8",
    "watchfiles",
    "anyio",
    "typer",
    "uvloop>=0.14.0,!=0.15.0,!=0.15.1; sys_platform != 'win32' and (sys_platform != 'cygwin' and platform_python_implementation != 'PyPy')",
]

dynamic = ["version"]

[project.urls]
Homepage = "https://github.com/Lancetnik/Propan"
Documentation = "https://github.com/Lancetnik/Propan"
Tracker = "https://github.com/Lancetnik/Propan/issues"
Source = "https://github.com/Lancetnik/Propan"

[project.scripts]
propan = "propan.__main__:cli"

[project.optional-dependencies]
async-rabbit = [
    "aio-pika>=9",
]

async-nats = [
    "nats-py>=2"
]

test = [
    "propan[async-rabbit]",
    "propan[async-nats]",

    "coverage[toml]>=7.2",
    "pytest>=7",
    "pytest-asyncio>=0.21",
    "pytest-xdist[psutil]",

    "asyncmock; python_version < '3.8'",
]

doc = [
    "mkdocs >=1.1.2,<2.0.0",
    "mkdocs-material >=8.1.4,<9.0.0",
    "mdx-include >=1.4.1,<2.0.0",
    "mkdocs-markdownextradata-plugin >=0.1.7,<0.3.0",
    "pyyaml >=5.3.1,<7.0.0",
]

dev = [
    "propan[test]",
    "propan[doc]",

    "mypy==1.1.1",
    "black==23.3.0",
    "isort>=5",
    "ruff==0.0.261",
    "typer[all]",
]

[tool.hatch.metadata]
allow-direct-references = true
allow-ambiguous-features = true

[tool.hatch.version]
path = "propan/__about__.py"

[tool.hatch.build]
skip-excluded-dirs = true
exclude = [
    "/tests",
    "/docs",
]

[tool.hatch.envs.default]
python = "3.11" 
skip-install = false
features = [
  "dev",
]

[tool.hatch.envs.test]
features = [
  "test",
]

[tool.hatch.envs.test.scripts]
run = "pytest -q -m 'not slow'"
run-all = "pytest -m 'all'"

[[tool.hatch.envs.test.matrix]]
python = ["37", "38", "39", "310", "311"]

[tool.hatch.envs.test-last]
python = "3.11"
features = [
  "test",
]

[tool.hatch.envs.test-last.scripts]
run = "pytest -q -m 'not slow'"
run-all = "pytest -v -m 'all'"
cov = "bash ./scripts/test-cov.sh -v -m 'all'"

[tool.mypy]
strict = true
ignore_missing_imports = true

[tool.isort]
profile = "black"
known_third_party = ["propan", "pydantic", "aio-pika", "nats-py"]

[tool.ruff]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long, handled by black
    "C901",  # too complex
]

[tool.ruff.isort]
known-third-party = ["propan", "pydantic", "aio-pika", "nats-py"]

[tool.ruff.flake8-bugbear]
extend-immutable-calls = [
    "propan.Depends", "propan.Alias",
    "propan.utils.Depends", "propan.utils.Alias",
    "propan.utils.context.Depends", "propan.utils.context.Alias",
    "typer.Argument", "typer.Option",
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-q -m 'not slow'"
testpaths = [
    "tests",
]
markers = [
    "slow",
    "rabbit",
    "nats",
    "all",
]

[tool.coverage.run]
parallel = true
branch = true
concurrency = [
    "multiprocessing",
    "thread"
]
source = [
    "propan",
    "tests"
]
context = '${CONTEXT}'
omit = [
    "**/__init__.py",
]

[tool.coverage.report]
show_missing = true
skip_empty = true
exclude_lines = [
    ".*# pragma: no cover",
    "if __name__ == .__main__.:",
    "self.logger",
    "def __repr__",
    "lambda: None",
    "from .*",
    "import .*",
    '@(abc\.)?abstractmethod',
    "raise NotImplementedError",
    'raise AssertionError',
    'raise ValueError',
    'logger\..*',
    "pass",
    '\.\.\.',
]
omit = [
    '*/__about__.py',
    '*/__main__.py',
    '*/__init__.py',
]